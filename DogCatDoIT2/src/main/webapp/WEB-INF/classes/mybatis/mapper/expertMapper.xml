<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="expert">
	<select id="seq" resultType="Integer">
		SELECT expert_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertExpert" parameterType="com.pet.app.expert.Expert">
		INSERT INTO expert(expertNum, userId, name, subject, content, created,
			hitCount, groupNum, orderNo, depth, parent)
			VALUES (#{expertNum}, #{userId}, #{name}, #{subject}, #{content}, SYSDATE, 
			0, #{groupNum}, #{orderNo}, #{depth}, #{parent}) 
	</insert>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM expert		
	</select>	
	
	<select id="listExpert" parameterType="map" resultType="com.pet.app.expert.Expert">
		SELECT expertNum, userId, name, subject, content, created,
			hitCount, groupNum, orderNo, depth
		FROM expert
		
		ORDER BY groupNum DESC, orderNo ASC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readExpert" parameterType="Integer" resultType="com.pet.app.expert.Expert">
		SELECT expertNum, userId, name, subject, content, created, hitCount, groupNum, orderNo, depth
		FROM expert
		WHERE expertNum = #{expertNum}
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE expert SET hitCount = hitCount+1 WHERE expertNum = #{expertNum}
	</update>
	
	<select id="preReadExpert" parameterType="map" resultType="com.pet.app.expert.Expert">
		SELECT expertNum, subject
		FROM expert
		
		<where>
			<![CDATA[
				AND ( (groupNum = #{groupNum} AND orderNo < #{orderNo})
					  OR (groupNum > #{groupNum}))
			]]>
		</where>
		
		ORDER BY groupNum ASC, orderNo DESC
		FETCH FIRST 1 ROWS ONLY
		
	</select>
		
	<select id="nextReadExpert" parameterType="map" resultType="com.pet.app.expert.Expert">
		SELECT expertNum, subject
		FROM expert
		<where>
			<![CDATA[
				AND ( (groupNum = #{groupNum} AND orderNo > #{orderNo})
					  OR (groupNum < #{groupNum}) )
			]]>
		</where>
 		ORDER BY groupNum DESC, orderNo ASC
	    FETCH FIRST 1 ROWS ONLY
	</select>
	
<!-- 	<select id="listArticleExpert" parameterType="Integer" resultType="com.pet.app.expert.Expert">
		SELECT ROWNUM 
	</select>
 -->	
	
	
	
	
	
	
	
	
	
	
	
</mapper>