<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junggo">

	<insert id="insertJunggo" parameterType="com.pet.app.junggo.Junggo">
		INSERT INTO junggo(num, categoryNum, userId, subject, content, regi_date,update_date,read_count)
			VALUES (junggo_seq.NEXTVAL, #{categoryNum}, #{userId}, #{subject}, #{content}, SYSDATE,SYSDATE,0)
	</insert>
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 
		          OR INSTR(LOWER(category), LOWER(#{keyword})) &gt; 0 )
			</when>
			<when test="condition == 'regi_date' ">
			   ( TO_CHAR(j.regi_date, 'YYYYMMDD') = #{keyword}
		          OR TO_CHAR(j.regi_date, 'YYYY-MM-DD') = #{keyword} )
			</when>
			
			<otherwise>
			    ( INSTR(${condition}, #{keyword}) &gt; 0 )
			</otherwise>
		</choose>
	</sql>

	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM junggo j
		JOIN member m ON j.userId=m.userId
		JOIN junggoCategory c ON j.categoryNum = c.categoryNum
		<where>
			<if test="categoryNum!=0">
				( c.categoryNum = #{categoryNum} )
			</if>
			<if test="keyword!=null and keyword!='' ">
				AND <include refid="where-list"/>
			</if>
			AND c.enabled = 1
		</where>
	</select>

	<select id="listJunggo" parameterType="map" resultType="com.pet.app.junggo.Junggo">
		SELECT j.num, j.userId, name, subject, 
			TO_CHAR(j.regi_date, 'YYYY-MM-DD') regi_date, content, read_count,
			c.categoryNum, category, orderNo
		FROM junggo j
		JOIN member m ON j.userId=m.userId
		JOIN junggoCategory c ON j.categoryNum = c.categoryNum
		<where>
			<if test="categoryNum!=0">
				( c.categoryNum = #{categoryNum} )
			</if>
			<if test="keyword!=null and keyword!='' ">
				AND <include refid="where-list"/>
			</if>
			AND c.enabled = 1
		</where>
		ORDER BY orderNo, num DESC 
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readJunggo" parameterType="Integer" resultType="com.pet.app.junggo.Junggo">
		SELECT j.num, j.userId, name, subject, content,
			 j.regi_date,  j.read_count,
			 j.categoryNum, c.category
		FROM junggo j
		JOIN member m ON j.userId=m.userId
		JOIN junggoCategory c ON j.categoryNum = c.categoryNum
		WHERE j.num = #{num}
	</select>

	<update id="updateJunggo" parameterType="com.pet.app.junggo.Junggo">
		UPDATE junggo SET categoryNum=#{categoryNum}, subject=#{subject},
			content=#{content}  
		<!-- ,pageNo=#{pageNo}  -->
		WHERE num = #{num}
	</update>

	<delete id="deleteJunggo" parameterType="map">
		DELETE FROM junggo WHERE num = #{num}
	</delete>
	
	<!-- 카테고리 -->
	<insert id="insertCategory" parameterType="com.pet.app.junggo.Junggo">
		INSERT INTO junggoCategory(categoryNum, category, enabled, orderNo)
			VALUES (junggoCategory_seq.NEXTVAL, #{category}, #{enabled}, #{orderNo})
	</insert>
	

	<select id="listCategory" parameterType="map" resultType="com.pet.app.junggo.Junggo">
		SELECT categoryNum, category, enabled, orderNo
		FROM junggoCategory
		<where>
			<if test="mode=='enabled'">
				enabled = 1
			</if>
		</where>
		ORDER BY orderNo
	</select>
	
	<update id="updateCategory" parameterType="com.pet.app.junggo.Junggo">
		UPDATE junggoCategory SET category=#{category}, enabled=#{enabled}, orderNo=#{orderNo}
		WHERE categoryNum = #{categoryNum}
	</update>
	
	<delete id="deleteCategory" parameterType="Integer">
		DELETE FROM junggoCategory
		WHERE categoryNum = #{categoryNum}
	</delete>
	
	<insert id="insertReply" parameterType="com.pet.app.junggo.JReply">
		INSERT INTO junggoReply(replyNum, num, userId, content, answer, regi_date)
			VALUES (junggoReply_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{answer}, SYSDATE)
	</insert>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM junggoReply
		WHERE num=#{num} AND answer=0
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.pet.app.junggo.JReply">
		SELECT r.replyNum, r.userId, name, num, content, r.regi_date
		FROM junggoReply r
		JOIN member m ON r.userId = m.userId
		WHERE num=#{num}  AND r.answer=0
		ORDER BY r.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>

	<update id="updateHitCount" parameterType="Integer">
		UPDATE junggo SET read_count=read_count+1 WHERE num = #{num}
	</update>
</mapper>